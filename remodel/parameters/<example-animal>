; -*- mode: scheme; -*-
'Parameters
(define <example-animal>-parameters
  (list
	(list 'decay-rate (/ -2.0 (log (* 8 days)))) ;; half the body will be gone in 8 days (scavenging and decay)
    ;;(list 'mass '<uninitialised>)
    ;;(list 'peak-mass '<uninitialised>)
    ;;(list 'sated-quantity-prop '<uninitialised>)
    ;;(list 'mort-prob '<uninitialised>)
    ;;(list 'age '<uninitialised>)
    ;;(list 'cell '<uninitialised>)
    ;;(list 'crowded-level '<uninitialised>)
    ;;(list 'reproduction-mass '<uninitialised>)
    ;;(list 'reproduction-prob '<uninitialised>)
    ;;(list 'reproduction-delay '<uninitialised>)
    ;;(list 'reproduction-ct '<uninitialised>)
    ;;(list 'prey-list '<uninitialised>)
    ;;(list 'eat-limit '<uninitialised>)
    ;;(list 'forage-ct '<uninitialised>)
    ;;(list 'migrate-param '<uninitialised>)
    ;;(list 'sated-time '<uninitialised>)
    ;;(list 'hunger-time '<uninitialised>)
    ;;(list 'hunger-moving-average '<uninitialised>)
    ;;(list 'seed-lag-list* '<uninitialised>)
  )
)
(set! global-parameter-alist (cons (cons <example-animal> <example-animal>-parameters) global-parameter-alist))
